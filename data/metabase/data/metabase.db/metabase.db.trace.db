2020-03-17 16:28:52 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-197]
2023-03-21 06:54:38 jdbc[9]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:302)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:387)
	at clojure.java.jdbc$prepare_statement.invokeStatic(jdbc.clj:672)
	at clojure.java.jdbc$prepare_statement.invoke(jdbc.clj:619)
	at clojure.java.jdbc$db_do_prepared.invokeStatic(jdbc.clj:1061)
	at clojure.java.jdbc$db_do_prepared.invoke(jdbc.clj:1042)
	at clojure.java.jdbc$execute_BANG_$execute_helper__18751.invoke(jdbc.clj:1446)
	at clojure.java.jdbc$execute_BANG_.invokeStatic(jdbc.clj:1450)
	at clojure.java.jdbc$execute_BANG_.invoke(jdbc.clj:1417)
	at toucan.db$execute_BANG_.invokeStatic(db.clj:424)
	at toucan.db$execute_BANG_.doInvoke(db.clj:419)
	at clojure.lang.RestFn.invoke(RestFn.java:410)
	at toucan.db$update_BANG_.invokeStatic(db.clj:479)
	at toucan.db$update_BANG_.invoke(db.clj:468)
	at toucan.db$update_BANG_.invokeStatic(db.clj:488)
	at toucan.db$update_BANG_.invoke(db.clj:468)
	at toucan.db$update_BANG_.invokeStatic(db.clj:496)
	at toucan.db$update_BANG_.doInvoke(db.clj:468)
	at clojure.lang.RestFn.invoke(RestFn.java:470)
	at metabase.sample_data$update_sample_dataset_if_needed_BANG_.invokeStatic(sample_data.clj:42)
	at metabase.sample_data$update_sample_dataset_if_needed_BANG_.invoke(sample_data.clj:38)
	at metabase.core$init_BANG_.invokeStatic(core.clj:104)
	at metabase.core$init_BANG_.invoke(core.clj:55)
	at metabase.core$start_normally.invokeStatic(core.clj:122)
	at metabase.core$start_normally.invoke(core.clj:116)
	at metabase.core$_main.invokeStatic(core.clj:142)
	at metabase.core$_main.doInvoke(core.clj:137)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at metabase.core.main(Unknown Source)
2023-03-21 06:54:39 jdbc[9]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:476)
	at com.mchange.v2.c3p0.impl.C3P0ImplUtils.resetTxnState(C3P0ImplUtils.java:245)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.reset(NewPooledConnection.java:461)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.markClosedProxyConnection(NewPooledConnection.java:417)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.close(NewProxyConnection.java:87)
	at clojure.java.jdbc$execute_BANG_.invokeStatic(jdbc.clj:1449)
	at clojure.java.jdbc$execute_BANG_.invoke(jdbc.clj:1417)
	at toucan.db$execute_BANG_.invokeStatic(db.clj:424)
	at toucan.db$execute_BANG_.doInvoke(db.clj:419)
	at clojure.lang.RestFn.invoke(RestFn.java:410)
	at toucan.db$update_BANG_.invokeStatic(db.clj:479)
	at toucan.db$update_BANG_.invoke(db.clj:468)
	at toucan.db$update_BANG_.invokeStatic(db.clj:488)
	at toucan.db$update_BANG_.invoke(db.clj:468)
	at toucan.db$update_BANG_.invokeStatic(db.clj:496)
	at toucan.db$update_BANG_.doInvoke(db.clj:468)
	at clojure.lang.RestFn.invoke(RestFn.java:470)
	at metabase.sample_data$update_sample_dataset_if_needed_BANG_.invokeStatic(sample_data.clj:42)
	at metabase.sample_data$update_sample_dataset_if_needed_BANG_.invoke(sample_data.clj:38)
	at metabase.core$init_BANG_.invokeStatic(core.clj:104)
	at metabase.core$init_BANG_.invoke(core.clj:55)
	at metabase.core$start_normally.invokeStatic(core.clj:122)
	at metabase.core$start_normally.invoke(core.clj:116)
	at metabase.core$_main.invokeStatic(core.clj:142)
	at metabase.core$_main.doInvoke(core.clj:137)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at metabase.core.main(Unknown Source)
2023-03-21 22:35:49 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:476)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.getAutoCommit(NewProxyConnection.java:1226)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:90)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy11.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:788)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doCheckin(JobStoreSupport.java:3232)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.manage(JobStoreSupport.java:3857)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.initialize(JobStoreSupport.java:3842)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.schedulerStarted(JobStoreSupport.java:678)
	at org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:526)
	at org.quartz.impl.StdScheduler.start(StdScheduler.java:143)
	at clojurewerkz.quartzite.scheduler$start.invokeStatic(scheduler.clj:31)
	at clojurewerkz.quartzite.scheduler$start.invoke(scheduler.clj:27)
	at metabase.task$start_scheduler_BANG_.invokeStatic(task.clj:145)
	at metabase.task$start_scheduler_BANG_.invoke(task.clj:136)
	at metabase.core$init_BANG_.invokeStatic(core.clj:88)
	at metabase.core$init_BANG_.invoke(core.clj:55)
	at metabase.core$start_normally.invokeStatic(core.clj:122)
	at metabase.core$start_normally.invoke(core.clj:116)
	at metabase.core$_main.invokeStatic(core.clj:142)
	at metabase.core$_main.doInvoke(core.clj:137)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at metabase.core.main(Unknown Source)
2023-03-21 22:35:49 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:302)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:387)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy11.prepareStatement(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdRowLockSemaphore.executeSQL(StdRowLockSemaphore.java:88)
	at org.quartz.impl.jdbcjobstore.DBSemaphore.obtainLock(DBSemaphore.java:113)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doCheckin(JobStoreSupport.java:3245)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.manage(JobStoreSupport.java:3857)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.initialize(JobStoreSupport.java:3842)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.schedulerStarted(JobStoreSupport.java:678)
	at org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:526)
	at org.quartz.impl.StdScheduler.start(StdScheduler.java:143)
	at clojurewerkz.quartzite.scheduler$start.invokeStatic(scheduler.clj:31)
	at clojurewerkz.quartzite.scheduler$start.invoke(scheduler.clj:27)
	at metabase.task$start_scheduler_BANG_.invokeStatic(task.clj:145)
	at metabase.task$start_scheduler_BANG_.invoke(task.clj:136)
	at metabase.core$init_BANG_.invokeStatic(core.clj:88)
	at metabase.core$init_BANG_.invoke(core.clj:55)
	at metabase.core$start_normally.invokeStatic(core.clj:122)
	at metabase.core$start_normally.invoke(core.clj:116)
	at metabase.core$_main.invokeStatic(core.clj:142)
	at metabase.core$_main.doInvoke(core.clj:137)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at metabase.core.main(Unknown Source)
2023-03-21 22:35:50 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:302)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:387)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy11.prepareStatement(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdRowLockSemaphore.executeSQL(StdRowLockSemaphore.java:88)
	at org.quartz.impl.jdbcjobstore.DBSemaphore.obtainLock(DBSemaphore.java:113)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doCheckin(JobStoreSupport.java:3245)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.manage(JobStoreSupport.java:3857)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.initialize(JobStoreSupport.java:3842)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.schedulerStarted(JobStoreSupport.java:678)
	at org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:526)
	at org.quartz.impl.StdScheduler.start(StdScheduler.java:143)
	at clojurewerkz.quartzite.scheduler$start.invokeStatic(scheduler.clj:31)
	at clojurewerkz.quartzite.scheduler$start.invoke(scheduler.clj:27)
	at metabase.task$start_scheduler_BANG_.invokeStatic(task.clj:145)
	at metabase.task$start_scheduler_BANG_.invoke(task.clj:136)
	at metabase.core$init_BANG_.invokeStatic(core.clj:88)
	at metabase.core$init_BANG_.invoke(core.clj:55)
	at metabase.core$start_normally.invokeStatic(core.clj:122)
	at metabase.core$start_normally.invoke(core.clj:116)
	at metabase.core$_main.invokeStatic(core.clj:142)
	at metabase.core$_main.doInvoke(core.clj:137)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at metabase.core.main(Unknown Source)
